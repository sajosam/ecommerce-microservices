# .github/workflows/cd.yml
name: CD - Deploy to Docker Hub

on:
  push:
    branches: [ main ]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      fastapi-order: ${{ steps.filter.outputs.fastapi-order }}
      nodejs-product: ${{ steps.filter.outputs.nodejs-product }}
      golang-user: ${{ steps.filter.outputs.golang-user }}
      flask-payment: ${{ steps.filter.outputs.flask-payment }}
      golang-main: ${{ steps.filter.outputs.golang-main }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            fastapi-order:
              - 'fastapi-order/**'
            nodejs-product:
              - 'nodejs-product/**'
            golang-user:
              - 'golang-user/**'
            flask-payment:
              - 'flask-payment/**'
            golang-main:
              - 'golang-main/**'

  build-and-push-fastapi-order:
    needs: detect-changes
    if: needs.detect-changes.outputs.fastapi-order == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Docker image
        run: |
          IMAGE=${{ secrets.DOCKER_USERNAME }}/fastapi-order:${{ github.sha }}
          docker build -t $IMAGE ./fastapi-order
          docker push $IMAGE

      - name: Update image tag in order-svc.yaml
        run: |
          sed -i "s#image: .*/fastapi-order:.*#image: ${{ secrets.DOCKER_USERNAME }}/fastapi-order:${{ github.sha }}#g" k8s/microservices/order-svc.yaml

      - name: Commit updated manifest
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add k8s/microservices/order-svc.yaml
          git commit -m "Update fastapi-order image to ${{ github.sha }}"
          git push

  build-and-push-nodejs-product:
    needs: detect-changes
    if: needs.detect-changes.outputs.nodejs-product == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build & Push Docker image
        run: |
          IMAGE=${{ secrets.DOCKER_USERNAME }}/nodejs-product:${{ github.sha }}
          docker build -t $IMAGE ./nodejs-product
          docker push $IMAGE

      - name: Update image tag in product-svc.yaml
        run: |
          sed -i "s#image: .*/nodejs-product:.*#image: ${{ secrets.DOCKER_USERNAME }}/nodejs-product:${{ github.sha }}#g" k8s/microservices/product-svc.yaml

      - name: Commit updated manifest
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add k8s/microservices/product-svc.yaml
          git commit -m "Update nodejs-product image to ${{ github.sha }}" || echo "No changes"
          git push

  build-and-push-golang-user:
    needs: detect-changes
    if: needs.detect-changes.outputs.golang-user == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build & Push Docker image
        run: |
          IMAGE=${{ secrets.DOCKER_USERNAME }}/golang-user:${{ github.sha }}
          docker build -t $IMAGE ./golang-user
          docker push $IMAGE
      
      - name: Update image tag in user-svc.yaml
        run: |
          sed -i "s#image: .*/golang-user:.*#image: ${{ secrets.DOCKER_USERNAME }}/golang-user:${{ github.sha }}#g" k8s/microservices/user-svc.yaml

      - name: Commit updated manifest
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add k8s/microservices/user-svc.yaml
          git commit -m "Update golang-user image to ${{ github.sha }}"
          git push
      
  build-and-push-flask-payment:
    needs: detect-changes
    if: needs.detect-changes.outputs.flask-payment == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Docker image
        run: |
          IMAGE=${{ secrets.DOCKER_USERNAME }}/flask-payment:${{ github.sha }}
          docker build -t $IMAGE ./flask-payment
          docker push $IMAGE
  
      - name: Update image tag in payment-svc.yaml
        run: |
          sed -i "s#image: .*/flask-payment:.*#image: ${{ secrets.DOCKER_USERNAME }}/flask-payment:${{ github.sha }}#g" k8s/microservices/payment-svc.yaml

      - name: Commit updated manifest
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add k8s/microservices/payment-svc.yaml
          git commit -m "Update flask-payment image to ${{ github.sha }}"
          git push

  build-and-push-gateway:
    needs: detect-changes
    if: needs.detect-changes.outputs.golang-main == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build & Push Docker image
        run: |
          IMAGE=${{ secrets.DOCKER_USERNAME }}/gateway:${{ github.sha }}
          docker build -t $IMAGE ./golang-main
          docker push $IMAGE

      - name: Update image tag in gateway.yaml
        run: |
          sed -i "s#image: .*/gateway:.*#image: ${{ secrets.DOCKER_USERNAME }}/gateway:${{ github.sha }}#g" k8s/microservices/gateway.yaml

      - name: Commit updated manifest
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add k8s/microservices/gateway.yaml
          git commit -m "Update gateway image to ${{ github.sha }}"
          git push